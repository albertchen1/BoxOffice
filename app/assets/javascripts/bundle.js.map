{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./frontend/index.jsx"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClfile":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./frontend/index.jsx\");\n","// import GameView from '../lib/game_view.js';\n// import Game from '../lib/game.js';\n// import Util from '../lib/util.js';\n\n// let computerOnly = false;\n\n// const SPAWN_SPACE = 69;\n\n// const smallSettings = {\n//   height: 500,\n//   width: 500,\n//   backgroundColor: \"#101010\",\n//   neutralBaseCount: 4,\n// }\n\n// const mediumSettings = {\n//   height: 1000,\n//   width: 1000,\n//   backgroundColor: \"#101010\",\n//   neutralBaseCount: 9,\n// }\n\n// const largeSettings = {\n//   height: 1080,\n//   width: 1920,\n//   backgroundColor: \"#101010\",\n//   neutralBaseCount: 16,\n// }\n\n// const playerColors = [\n//   '#91EB8F',\n//   '#D66342',\n//   '#8ACAF6',\n//   '#AB77D4',\n// ]\n\n// const gameDifficulty = {\n//   easy: .33,\n//   medium: .66,\n//   hard: .88,\n// }\n\n// let gameView;\n// let game;\n\n// function locationPosition(height, width, placement) {\n//   let leftBound = 5,\n//     upperBound = 5,\n//     xPos = 5,\n//     yPos = 5;\n//   let leftBound2 = 5,\n//     upperBound2 = 5,\n//     xPos2 = 5,\n//     yPos2 = 5;\n\n//   const randomDir = Util.getRandomArbitrary(0, 2);\n\n//   switch (placement) {\n//     case 0:\n//       // First Base\n//       leftBound = 5;\n//       upperBound = 5;\n\n//       // Second Base\n//       if (randomDir === 0) {\n//         leftBound2 = leftBound;\n//         upperBound2 = upperBound + Math.floor(1.6 * SPAWN_SPACE);\n//       } else {\n//         leftBound2 = leftBound + Math.floor(1.6 * SPAWN_SPACE);\n//         upperBound2 = upperBound;\n//       }\n\n//       break;\n\n//     case 1:\n//       leftBound = width - Math.floor(1.4 * SPAWN_SPACE);\n//       upperBound = 5\n\n//       if (randomDir === 0) {\n//         leftBound2 = leftBound - Math.floor(1.6 * SPAWN_SPACE);\n//         upperBound2 = upperBound;\n//       } else {\n//         leftBound2 = leftBound;\n//         upperBound2 = upperBound + Math.floor(1.6 * SPAWN_SPACE);\n//       }\n\n//       break;\n\n//     case 2:\n//       leftBound = width - Math.floor(1.4 * SPAWN_SPACE);\n//       upperBound = height - Math.floor(1.4 * SPAWN_SPACE);\n\n//       if (randomDir === 0) {\n//         leftBound2 = leftBound - Math.floor(1.6 * SPAWN_SPACE);\n//         upperBound2 = upperBound;\n//       } else {\n//         leftBound2 = leftBound;\n//         upperBound2 = upperBound - Math.floor(1.6 * SPAWN_SPACE);\n//       }\n\n//       break;\n\n//     case 3:\n//       leftBound = 5;\n//       upperBound = height - Math.floor(1.4 * SPAWN_SPACE);\n\n//       if (randomDir === 0) {\n//         leftBound2 = leftBound + Math.floor(1.6 * SPAWN_SPACE);\n//         upperBound2 = upperBound;\n//       } else {\n//         leftBound2 = leftBound;\n//         upperBound2 = upperBound - Math.floor(1.6 * SPAWN_SPACE);\n//       }\n\n//       break;\n\n//     default:\n//       console.log(height, width, placement, \"BROKE\");\n//       break;\n//   }\n\n//   xPos = Util.getRandomArbitrary(leftBound, leftBound + SPAWN_SPACE / 4);\n//   yPos = Util.getRandomArbitrary(upperBound, upperBound + SPAWN_SPACE / 4);\n//   const firstBase = [xPos, yPos];\n\n//   xPos2 = Util.getRandomArbitrary(leftBound2, leftBound2 + SPAWN_SPACE / 4);\n//   yPos2 = Util.getRandomArbitrary(upperBound2, upperBound2 + SPAWN_SPACE / 4);\n//   const secondBase = [xPos2, yPos2];\n\n//   return {\n//     first: firstBase,\n//     second: secondBase,\n//   };\n// }\n\n// function newGame() {\n//   if (gameView) gameView.game.gameOver = true;\n\n//   const audio = document.getElementsByTagName('audio')[0];\n//   audio.play();\n\n//   let selectedSettings;\n\n//   document.getElementById('game-toggles').classList.remove('hidden');\n\n//   switch (document.getElementById('game-setting').value) {\n//     case \"small\":\n//       selectedSettings = smallSettings;\n//       break;\n//     case \"large\":\n//       selectedSettings = largeSettings;\n//       break;\n//     default:\n//       selectedSettings = mediumSettings;\n//       break;\n//   }\n\n//   let numPlayers = document.getElementById('game-players').value;\n\n//   const startingLocationForPlayers = [];\n//   while (numPlayers > 0) {\n//     let randomLocation = Util.getRandomArbitrary(0, 4);\n//     if (!startingLocationForPlayers.includes(randomLocation)) {\n//       startingLocationForPlayers.push(randomLocation);\n//       numPlayers -= 1;\n//     }\n//   }\n\n//   game = new Game(selectedSettings);\n//   game.addStars(Util.getRandomArbitrary(69, 420));\n//   game.addNeutralBases(SPAWN_SPACE * 1.5, game.settings.neutralBaseCount);\n\n//   const canvas = document.getElementById('canvas');\n//   canvas.width = game.settings.width;\n//   canvas.height = game.settings.height;\n\n//   const context = canvas.getContext('2d');\n\n//   canvas.addEventListener('click', event => {\n//     const x = event.pageX - canvas.offsetLeft;\n//     const y = event.pageY - canvas.offsetTop;\n\n//     let clickedBase = false;\n\n//     game.bases.forEach(base => {\n//       if (y > base.y && y < base.y + base.width && x > base.x && x < base.x + base.width) {\n//         if (!!game.prevClick) {\n//           base.selected = false;\n\n//           game.prevClick.forEach(b => {\n//             b.selected = false;\n//             if (b === base) {\n//               base.selected = false;\n//             } else {\n//               game.swarm(b, base);\n//             }\n//           })\n\n//           game.prevClick = undefined;\n//         } else {\n//           if (base.player.humanPlayer) {\n//             base.selected = true;\n//             game.prevClick = [base];\n//           } else {\n//             // Nothing happens for now\n//           }\n//         }\n\n//         clickedBase = true;\n//       } else {\n//         base.selected = false;\n//       }\n//     });\n\n//     if (!clickedBase) {\n//       game.prevClick = false;\n//     }\n//   });\n\n//   const selectedDifficulty = document.getElementById('game-difficulty').value;\n\n//   startingLocationForPlayers.forEach((loc, index) => {\n//     game.addPlayer({\n//       playerName: `Player ${index + 1}`,\n//       humanPlayer: !computerOnly && index === 0,\n//       thoughtGrowth: !computerOnly && index === 0 ? 0 : gameDifficulty[selectedDifficulty],\n//       color: playerColors[index],\n//       origin: locationPosition(game.settings.height, game.settings.width, loc),\n//     });\n//   });\n\n//   // game.addPlayer({\n//   //   playerName: \"Player 2\",\n//   //   humanPlayer: false,\n//   //   color: '#EB7261',\n//   //   origin: [selectedSettings.width-100,selectedSettings.height-100],\n//   //   space: 50,\n//   // })\n\n//   const muteButton = document.getElementById('mute-button');\n//   muteButton.addEventListener('click', event => {\n//     game.mute = !game.mute;\n//     audio.mute = game.mute;\n//     muteButton.innerText = game.mute ? \"Unmute\" : \"Mute\";\n//   });\n\n//   gameView = new GameView(game, context).start();\n// }\n\n// function toggleGrid() {\n//   if (game) game.drawGrid = !game.drawGrid;\n// }\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//   const newGameButton = document.getElementById('new-game');\n//   const computerGameButton = document.getElementById('computer-game');\n\n//   newGameButton.addEventListener('click', event => {\n//     event.target.textContent = \"Currently Broken Button\";\n//     event.target.disabled = true;\n//     computerGameButton.disabled = true;\n//     newGame();\n//   });\n\n//   computerGameButton.addEventListener('click', event => {\n//     event.target.textContent = \"Computers only\";\n//     event.target.disabled = true;\n//     newGameButton.disabled = true;\n//     computerOnly = true;\n//     newGame();\n//   });\n\n//   const toggleGridButton = document.getElementById('grid-toggle');\n//   toggleGridButton.addEventListener('click', event => {\n//     toggleGrid();\n//   });\n// });"],"sourceRoot":""}